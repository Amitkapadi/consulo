/*
 * Copyright 2013-2018 consulo.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.intellij.credentialStore.keePass;

import consulo.platform.Platform;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import java.util.Arrays;

/**
 * from kotlin
 */
public class MasterKey {
  @Nonnull
  public static EncryptionType getDefaultEncryptionType() {
    if (Platform.current().info().isWindows()) {
      return EncryptionType.CRYPT_32;
    }
    return EncryptionType.BUILT_IN;
  }

  private byte[] value;
  private boolean isAutoGenerated;
  private EncryptionType encryption = getDefaultEncryptionType();

  public MasterKey(@Nonnull byte[] value, boolean isAutoGenerated, EncryptionType encryption) {
    this.value = value;
    this.isAutoGenerated = isAutoGenerated;
    this.encryption = encryption;
  }

  @Nullable
  public byte[] getValue() {
    return value;
  }

  public boolean isAutoGenerated() {
    return isAutoGenerated;
  }

  public EncryptionType getEncryption() {
    return encryption;
  }

  public void clear() {
    Arrays.fill(value, (byte)0);
    value = null;
  }
}
